#
# CSE186 Assignment 8 Backend
#

openapi: '3.0.3'

info:
  description: CSE186 Assignment 8 Backend
  version: 0.2.0
  title: CSE186 Assignment 8 Backend

servers:
  - url: http://localhost:3010/api/v0

paths:
  /login:
    post:
      summary: Authenticate a user
      description: Authenticates a user with email and password
      operationId: login
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - password
              properties:
                email:
                  type: string
                  format: email
                  description: User's email address
                password:
                  type: string
                  format: password
                  description: User's password
      responses:
        '200':
          description: Authentication successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  name:
                    type: string
                    description: User's name
                  accessToken:
                    type: string
                    description: JWT token for authentication
        '401':
          description: Invalid credentials
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Invalid credentials
        '500':
          description: Server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Server error

  /register:
    post:
      summary: Register a new user
      description: Creates a new user account
      operationId: register
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - password
                - name
              properties:
                email:
                  type: string
                  format: email
                  description: User's email address
                password:
                  type: string
                  format: password
                  description: User's password
                name:
                  type: string
                  description: User's name
                role:
                  type: string
                  description: User's role (defaults to 'user')
                  default: user
      responses:
        '201':
          description: User registered successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: User registered successfully
        '400':
          description: Missing required fields
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Email, password, and name are required
        '409':
          description: User already exists
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: User with this email already exists
        '500':
          description: Server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Server error during registration

  /workspaces:
    post:
      summary: Create a new workspace
      description: Creates a new workspace
      operationId: createWorkspace
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - name
              properties:
                name:
                  type: string
                  description: Workspace name
      responses:
        '201':
          description: Workspace created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Workspace created successfully
        '400':
          description: Missing required fields
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Name and userId are required
        '500':
          description: Server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Server error during workspace creation
    get:
      summary: Get workspaces for the authenticated user
      description: Gets all workspaces for the authenticated user
      operationId: getWorkspaces
      security:
        - bearerAuth: []
      responses:
        '200':
          description: List of workspaces
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      format: uuid
                    data:
                      type: object
                      properties:
                        name:
                          type: string
        '500':
          description: Server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Server error

  /workspaces/current:
    put:
      summary: Set current workspace for user
      description: Updates which workspace is marked as current for the authenticated user
      operationId: setCurrentWorkspace
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - workspaceId
              properties:
                workspaceId:
                  type: string
                  format: uuid
                  description: ID of the workspace to set as current
      responses:
        '200':
          description: Current workspace updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Current workspace updated successfully
        '400':
          description: Missing or invalid workspaceId
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: WorkspaceId is required
        '500':
          description: Server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Failed to update current workspace

  /workspaces/users:
    post:
      summary: Add a user to a workspace
      description: Adds a user to a workspace
      operationId: addUserToWorkspace
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - workspaceId
                - userId
              properties:
                workspaceId:
                  type: string
                  format: uuid
                  description: ID of the workspace
                userId:
                  type: string
                  format: uuid
                  description: ID of the user to add
      responses:
        '201':
          description: User added to workspace successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: User added to workspace successfully
        '400':
          description: Missing required fields
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: WorkspaceId and userId are required
        '500':
          description: Server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Server error

  /workspaces/users/{workspaceId}:
    get:
      summary: Get users for a workspace
      description: Gets all users for a workspace
      operationId: getUsersForWorkspace
      security:
        - bearerAuth: []
      parameters:
        - name: workspaceId
          in: path
          required: true
          schema:
            type: string
            format: uuid
          description: ID of the workspace
      responses:
        '200':
          description: List of users
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      format: uuid
                    data:
                      type: object
                      properties:
                        name:
                          type: string
                        email:
                          type: string
        '500':
          description: Server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Server error

  /workspaces/channels:
    post:
      summary: Create a new channel
      description: Creates a new channel in a workspace
      operationId: createChannel
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - name
                - workspaceId
              properties:
                name:
                  type: string
                  description: Channel name
                workspaceId:
                  type: string
                  format: uuid
                  description: ID of the workspace
      responses:
        '201':
          description: Channel created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Channel created successfully
        '400':
          description: Missing required fields
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Name and workspaceId are required
        '500':
          description: Server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Server error
    get:
      summary: Get channels for a workspace
      description: Gets all channels for a workspace
      operationId: getChannels
      security:
        - bearerAuth: []
      parameters:
        - name: workspaceId
          in: query
          required: true
          schema:
            type: string
            format: uuid
          description: ID of the workspace
      responses:
        '200':
          description: List of channels
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      format: uuid
                    data:
                      type: object
                      properties:
                        name:
                          type: string
        '500':
          description: Server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Server error

  /workspaces/channels/messages:
    post:
      summary: Create a new message
      description: Creates a new message in a channel
      operationId: createMessage
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - channelId
                - userId
                - content
              properties:
                channelId:
                  type: string
                  format: uuid
                  description: ID of the channel
                userId:
                  type: string
                  format: uuid
                  description: ID of the user sending the message
                content:
                  type: string
                  description: Message content
      responses:
        '201':
          description: Message created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Message created successfully
        '400':
          description: Missing required fields
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: ChannelId, userId, and content are required
        '500':
          description: Server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Server error

  /workspaces/channels/messages/{channelId}:
    get:
      summary: Get messages for a channel
      description: Gets all messages for a channel
      operationId: getMessages
      security:
        - bearerAuth: []
      parameters:
        - name: channelId
          in: path
          required: true
          schema:
            type: string
            format: uuid
          description: ID of the channel
      responses:
        '200':
          description: List of messages
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    data:
                      type: object
                      properties:
                        content:
                          type: string
                        userId:
                          type: string
                          format: uuid
                        timestamp:
                          type: string
                          format: date-time
        '500':
          description: Server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Server error

  /users:
    get:
      summary: Get all users (development only)
      description: Gets all users in the system (for development purposes only)
      operationId: getAllUsers
      security:
        - bearerAuth: []
      responses:
        '200':
          description: List of users
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      format: uuid
                    data:
                      type: object
                      properties:
                        name:
                          type: string
                        email:
                          type: string
                          format: email
                        role:
                          type: string
        '500':
          description: Server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Server error

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: JWT token obtained from the login endpoint
