#
# CSE186 Assignment 8 Backend
#

openapi: '3.0.3'

info:
  description: CSE186 Assignment 8 Backend
  version: 0.2.0
  title: CSE186 Assignment 8 Backend

servers:
  - url: http://localhost:3010/api/v0

paths:
  /login:
    post:
      summary: Authenticate a user
      description: Authenticates a user with email and password
      operationId: login
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - password
              properties:
                email:
                  type: string
                  format: email
                  description: User's email address
                password:
                  type: string
                  format: password
                  description: User's password
      responses:
        '200':
          description: Authentication successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  name:
                    type: string
                    description: User's name
                  accessToken:
                    type: string
                    description: JWT token for authentication
        '401':
          description: Invalid credentials
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Invalid credentials
        '500':
          description: Server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Server error

  /register:
    post:
      summary: Register a new user
      description: Creates a new user account
      operationId: register
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - password
                - name
              properties:
                email:
                  type: string
                  format: email
                  description: User's email address
                password:
                  type: string
                  format: password
                  description: User's password
                name:
                  type: string
                  description: User's name
                role:
                  type: string
                  description: User's role (defaults to 'user')
                  default: user
      responses:
        '201':
          description: User registered successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: User registered successfully
        '400':
          description: Missing required fields
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Email, password, and name are required
        '409':
          description: User already exists
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: User with this email already exists
        '500':
          description: Server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Server error during registration

  /workspaces:
    post:
      summary: Create a new workspace
      description: Creates a new workspace
      operationId: createWorkspace
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - name
              properties:
                name:
                  type: string
                  description: Workspace name
                description:
                  type: string
                  description: Workspace description
      responses:
        '201':
          description: Workspace created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Workspace created successfully
        '400':
          description: Missing required fields
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Name is required
        '500':
          description: Server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Server error during workspace creation
    get:
      summary: Get workspaces for the authenticated user
      description: Gets all workspaces for the authenticated user
      operationId: getWorkspaces
      security:
        - bearerAuth: []
      responses:
        '200':
          description: List of workspaces
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      format: uuid
                    name:
                      type: string
                    role:
                      type: string
                    current:
                      type: string
        '500':
          description: Server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Server error

  /workspaces/current:
    put:
      summary: Set current workspace for user
      description: Updates which workspace is marked as current for the authenticated user
      operationId: setCurrentWorkspace
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - workspaceId
              properties:
                workspaceId:
                  type: string
                  format: uuid
                  description: ID of the workspace to set as current
      responses:
        '200':
          description: Current workspace updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Current workspace updated successfully
        '400':
          description: Missing or invalid workspaceId
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: WorkspaceId is required
        '500':
          description: Server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Failed to update current workspace
    get:
      summary: Get current workspace for user
      description: Gets the workspace that is marked as current for the authenticated user
      operationId: getCurrentWorkspace
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Current workspace information
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    format: uuid
                    description: Workspace ID
                  name:
                    type: string
                    description: Workspace name
                  role:
                    type: string
                    description: User's role in the workspace
        '404':
          description: No current workspace found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: No current workspace found
        '500':
          description: Server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Failed to get current workspace

  /workspaces/{id}/channels:
    post:
      summary: Create a new channel in a workspace
      description: Creates a new channel in the specified workspace
      operationId: createChannel
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
          description: ID of the workspace
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - name
              properties:
                name:
                  type: string
                  description: Channel name
      responses:
        '201':
          description: Channel created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Channel created successfully
        '400':
          description: Missing required fields
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Name is required
        '500':
          description: Server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Server error
    get:
      summary: Get channels for a workspace
      description: Gets all channels for the specified workspace
      operationId: getChannels
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
          description: ID of the workspace
      responses:
        '200':
          description: List of channels
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      format: uuid
                    name:
                      type: string
        '500':
          description: Server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Server error

  /workspaces/{id}/users:
    get:
      summary: Get users for a workspace
      description: Gets all users for the specified workspace
      operationId: getUsers
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
          description: ID of the workspace
      responses:
        '200':
          description: List of users in the workspace
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      format: uuid
                      description: User ID
                    name:
                      type: string
                      description: User's name
                    online:
                      type: boolean
                      description: User's online status
        '500':
          description: Server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Server error

  /channels/{channelId}/messages:
    get:
      summary: Get messages for a specific channel
      description: Retrieves all messages for the specified channel
      operationId: getChannelMessages
      security:
        - bearerAuth: []
      parameters:
        - name: channelId
          in: path
          required: true
          schema:
            type: string
            format: uuid
          description: ID of the channel
      responses:
        '200':
          description: List of channel messages
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      format: uuid
                      description: Message ID
                    content:
                      type: string
                      description: Message content
                    sender:
                      type: string
                      description: Sender's name
                    timestamp:
                      type: string
                      format: date-time
                      description: Message timestamp
                    userId:
                      type: string
                      format: uuid
                      description: Sender's user ID
        '404':
          description: Channel not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Channel not found
        '500':
          description: Server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Failed to fetch channel messages

    post:
      summary: Send a message to a specific channel
      description: Sends a new message to the specified channel
      operationId: sendChannelMessage
      security:
        - bearerAuth: []
      parameters:
        - name: channelId
          in: path
          required: true
          schema:
            type: string
            format: uuid
          description: ID of the channel
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - content
              properties:
                content:
                  type: string
                  description: Message content
      responses:
        '201':
          description: Message sent successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    format: uuid
                    description: Message ID
                  content:
                    type: string
                    description: Message content
                  sender:
                    type: string
                    description: Sender's name
                  timestamp:
                    type: string
                    format: date-time
                    description: Message timestamp
                  userId:
                    type: string
                    format: uuid
                    description: Sender's user ID
        '404':
          description: Channel not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Channel not found
        '500':
          description: Server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Failed to send message to channel

  /dm/{userId}/messages:
    get:
      summary: Get direct messages with a specific user
      description: Retrieves all direct messages between the authenticated user and the specified user
      operationId: getDMMessages
      security:
        - bearerAuth: []
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
            format: uuid
          description: ID of the other user
      responses:
        '200':
          description: List of direct messages
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      format: uuid
                      description: Message ID
                    content:
                      type: string
                      description: Message content
                    sender:
                      type: string
                      description: Sender's name (or 'You' for authenticated user)
                    timestamp:
                      type: string
                      format: date-time
                      description: Message timestamp
                    userId:
                      type: string
                      format: uuid
                      description: Sender's user ID
        '404':
          description: User not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: User not found
        '500':
          description: Server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Failed to fetch DM messages
    
    post:
      summary: Send a direct message to a specific user
      description: Sends a new direct message to the specified user
      operationId: sendDMMessage
      security:
        - bearerAuth: []
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
            format: uuid
          description: ID of the recipient user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - content
              properties:
                content:
                  type: string
                  description: Message content
      responses:
        '201':
          description: Direct message sent successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    format: uuid
                    description: Message ID
                  content:
                    type: string
                    description: Message content
                  sender:
                    type: string
                    description: Sender's name (returns 'You')
                  timestamp:
                    type: string
                    format: date-time
                    description: Message timestamp
                  userId:
                    type: string
                    format: uuid
                    description: Sender's user ID
        '404':
          description: User not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: User not found
        '500':
          description: Server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Failed to send direct message

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: JWT token obtained from the login endpoint
